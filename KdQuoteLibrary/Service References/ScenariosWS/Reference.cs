//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KdQuoteLibrary.ScenariosWS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/DecisionMaker/IRScenarios", ConfigurationName="ScenariosWS.ScenariosSoap")]
    public interface ScenariosSoap {
        
        // CODEGEN: Generating message contract since element name Zipcode from namespace http://tempuri.org/DecisionMaker/IRScenarios is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DecisionMaker/IRScenarios/LookupCoverages", ReplyAction="*")]
        KdQuoteLibrary.ScenariosWS.LookupCoveragesResponse LookupCoverages(KdQuoteLibrary.ScenariosWS.LookupCoveragesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DecisionMaker/IRScenarios/LookupCoverages", ReplyAction="*")]
        System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupCoveragesResponse> LookupCoveragesAsync(KdQuoteLibrary.ScenariosWS.LookupCoveragesRequest request);
        
        // CODEGEN: Generating message contract since element name Zipcode from namespace http://tempuri.org/DecisionMaker/IRScenarios is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DecisionMaker/IRScenarios/LookupEndorsements", ReplyAction="*")]
        KdQuoteLibrary.ScenariosWS.LookupEndorsementsResponse LookupEndorsements(KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DecisionMaker/IRScenarios/LookupEndorsements", ReplyAction="*")]
        System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupEndorsementsResponse> LookupEndorsementsAsync(KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequest request);
        
        // CODEGEN: Generating message contract since element name Zipcode from namespace http://tempuri.org/DecisionMaker/IRScenarios is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DecisionMaker/IRScenarios/LookupCoveragesWithCity", ReplyAction="*")]
        KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityResponse LookupCoveragesWithCity(KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DecisionMaker/IRScenarios/LookupCoveragesWithCity", ReplyAction="*")]
        System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityResponse> LookupCoveragesWithCityAsync(KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequest request);
        
        // CODEGEN: Generating message contract since element name Zipcode from namespace http://tempuri.org/DecisionMaker/IRScenarios is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DecisionMaker/IRScenarios/LookupEndorsementsWithCity", ReplyAction="*")]
        KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityResponse LookupEndorsementsWithCity(KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DecisionMaker/IRScenarios/LookupEndorsementsWithCity", ReplyAction="*")]
        System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityResponse> LookupEndorsementsWithCityAsync(KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LookupCoveragesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LookupCoverages", Namespace="http://tempuri.org/DecisionMaker/IRScenarios", Order=0)]
        public KdQuoteLibrary.ScenariosWS.LookupCoveragesRequestBody Body;
        
        public LookupCoveragesRequest() {
        }
        
        public LookupCoveragesRequest(KdQuoteLibrary.ScenariosWS.LookupCoveragesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/DecisionMaker/IRScenarios")]
    public partial class LookupCoveragesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int AccountNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int FormCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EffectiveDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Zipcode;
        
        public LookupCoveragesRequestBody() {
        }
        
        public LookupCoveragesRequestBody(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode) {
            this.AccountNo = AccountNo;
            this.FormCode = FormCode;
            this.EffectiveDate = EffectiveDate;
            this.Zipcode = Zipcode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LookupCoveragesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LookupCoveragesResponse", Namespace="http://tempuri.org/DecisionMaker/IRScenarios", Order=0)]
        public KdQuoteLibrary.ScenariosWS.LookupCoveragesResponseBody Body;
        
        public LookupCoveragesResponse() {
        }
        
        public LookupCoveragesResponse(KdQuoteLibrary.ScenariosWS.LookupCoveragesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/DecisionMaker/IRScenarios")]
    public partial class LookupCoveragesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string LookupCoveragesResult;
        
        public LookupCoveragesResponseBody() {
        }
        
        public LookupCoveragesResponseBody(string LookupCoveragesResult) {
            this.LookupCoveragesResult = LookupCoveragesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LookupEndorsementsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LookupEndorsements", Namespace="http://tempuri.org/DecisionMaker/IRScenarios", Order=0)]
        public KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequestBody Body;
        
        public LookupEndorsementsRequest() {
        }
        
        public LookupEndorsementsRequest(KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/DecisionMaker/IRScenarios")]
    public partial class LookupEndorsementsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int AccountNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int FormCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EffectiveDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Zipcode;
        
        public LookupEndorsementsRequestBody() {
        }
        
        public LookupEndorsementsRequestBody(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode) {
            this.AccountNo = AccountNo;
            this.FormCode = FormCode;
            this.EffectiveDate = EffectiveDate;
            this.Zipcode = Zipcode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LookupEndorsementsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LookupEndorsementsResponse", Namespace="http://tempuri.org/DecisionMaker/IRScenarios", Order=0)]
        public KdQuoteLibrary.ScenariosWS.LookupEndorsementsResponseBody Body;
        
        public LookupEndorsementsResponse() {
        }
        
        public LookupEndorsementsResponse(KdQuoteLibrary.ScenariosWS.LookupEndorsementsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/DecisionMaker/IRScenarios")]
    public partial class LookupEndorsementsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string LookupEndorsementsResult;
        
        public LookupEndorsementsResponseBody() {
        }
        
        public LookupEndorsementsResponseBody(string LookupEndorsementsResult) {
            this.LookupEndorsementsResult = LookupEndorsementsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LookupCoveragesWithCityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LookupCoveragesWithCity", Namespace="http://tempuri.org/DecisionMaker/IRScenarios", Order=0)]
        public KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequestBody Body;
        
        public LookupCoveragesWithCityRequest() {
        }
        
        public LookupCoveragesWithCityRequest(KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/DecisionMaker/IRScenarios")]
    public partial class LookupCoveragesWithCityRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int AccountNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int FormCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EffectiveDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Zipcode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string City;
        
        public LookupCoveragesWithCityRequestBody() {
        }
        
        public LookupCoveragesWithCityRequestBody(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode, string City) {
            this.AccountNo = AccountNo;
            this.FormCode = FormCode;
            this.EffectiveDate = EffectiveDate;
            this.Zipcode = Zipcode;
            this.City = City;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LookupCoveragesWithCityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LookupCoveragesWithCityResponse", Namespace="http://tempuri.org/DecisionMaker/IRScenarios", Order=0)]
        public KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityResponseBody Body;
        
        public LookupCoveragesWithCityResponse() {
        }
        
        public LookupCoveragesWithCityResponse(KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/DecisionMaker/IRScenarios")]
    public partial class LookupCoveragesWithCityResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string LookupCoveragesWithCityResult;
        
        public LookupCoveragesWithCityResponseBody() {
        }
        
        public LookupCoveragesWithCityResponseBody(string LookupCoveragesWithCityResult) {
            this.LookupCoveragesWithCityResult = LookupCoveragesWithCityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LookupEndorsementsWithCityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LookupEndorsementsWithCity", Namespace="http://tempuri.org/DecisionMaker/IRScenarios", Order=0)]
        public KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequestBody Body;
        
        public LookupEndorsementsWithCityRequest() {
        }
        
        public LookupEndorsementsWithCityRequest(KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/DecisionMaker/IRScenarios")]
    public partial class LookupEndorsementsWithCityRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int AccountNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int FormCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EffectiveDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Zipcode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string City;
        
        public LookupEndorsementsWithCityRequestBody() {
        }
        
        public LookupEndorsementsWithCityRequestBody(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode, string City) {
            this.AccountNo = AccountNo;
            this.FormCode = FormCode;
            this.EffectiveDate = EffectiveDate;
            this.Zipcode = Zipcode;
            this.City = City;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LookupEndorsementsWithCityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LookupEndorsementsWithCityResponse", Namespace="http://tempuri.org/DecisionMaker/IRScenarios", Order=0)]
        public KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityResponseBody Body;
        
        public LookupEndorsementsWithCityResponse() {
        }
        
        public LookupEndorsementsWithCityResponse(KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/DecisionMaker/IRScenarios")]
    public partial class LookupEndorsementsWithCityResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string LookupEndorsementsWithCityResult;
        
        public LookupEndorsementsWithCityResponseBody() {
        }
        
        public LookupEndorsementsWithCityResponseBody(string LookupEndorsementsWithCityResult) {
            this.LookupEndorsementsWithCityResult = LookupEndorsementsWithCityResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ScenariosSoapChannel : KdQuoteLibrary.ScenariosWS.ScenariosSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScenariosSoapClient : System.ServiceModel.ClientBase<KdQuoteLibrary.ScenariosWS.ScenariosSoap>, KdQuoteLibrary.ScenariosWS.ScenariosSoap {
        
        public ScenariosSoapClient() {
        }
        
        public ScenariosSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScenariosSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScenariosSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScenariosSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KdQuoteLibrary.ScenariosWS.LookupCoveragesResponse KdQuoteLibrary.ScenariosWS.ScenariosSoap.LookupCoverages(KdQuoteLibrary.ScenariosWS.LookupCoveragesRequest request) {
            return base.Channel.LookupCoverages(request);
        }
        
        public string LookupCoverages(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode) {
            KdQuoteLibrary.ScenariosWS.LookupCoveragesRequest inValue = new KdQuoteLibrary.ScenariosWS.LookupCoveragesRequest();
            inValue.Body = new KdQuoteLibrary.ScenariosWS.LookupCoveragesRequestBody();
            inValue.Body.AccountNo = AccountNo;
            inValue.Body.FormCode = FormCode;
            inValue.Body.EffectiveDate = EffectiveDate;
            inValue.Body.Zipcode = Zipcode;
            KdQuoteLibrary.ScenariosWS.LookupCoveragesResponse retVal = ((KdQuoteLibrary.ScenariosWS.ScenariosSoap)(this)).LookupCoverages(inValue);
            return retVal.Body.LookupCoveragesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupCoveragesResponse> KdQuoteLibrary.ScenariosWS.ScenariosSoap.LookupCoveragesAsync(KdQuoteLibrary.ScenariosWS.LookupCoveragesRequest request) {
            return base.Channel.LookupCoveragesAsync(request);
        }
        
        public System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupCoveragesResponse> LookupCoveragesAsync(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode) {
            KdQuoteLibrary.ScenariosWS.LookupCoveragesRequest inValue = new KdQuoteLibrary.ScenariosWS.LookupCoveragesRequest();
            inValue.Body = new KdQuoteLibrary.ScenariosWS.LookupCoveragesRequestBody();
            inValue.Body.AccountNo = AccountNo;
            inValue.Body.FormCode = FormCode;
            inValue.Body.EffectiveDate = EffectiveDate;
            inValue.Body.Zipcode = Zipcode;
            return ((KdQuoteLibrary.ScenariosWS.ScenariosSoap)(this)).LookupCoveragesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KdQuoteLibrary.ScenariosWS.LookupEndorsementsResponse KdQuoteLibrary.ScenariosWS.ScenariosSoap.LookupEndorsements(KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequest request) {
            return base.Channel.LookupEndorsements(request);
        }
        
        public string LookupEndorsements(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode) {
            KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequest inValue = new KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequest();
            inValue.Body = new KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequestBody();
            inValue.Body.AccountNo = AccountNo;
            inValue.Body.FormCode = FormCode;
            inValue.Body.EffectiveDate = EffectiveDate;
            inValue.Body.Zipcode = Zipcode;
            KdQuoteLibrary.ScenariosWS.LookupEndorsementsResponse retVal = ((KdQuoteLibrary.ScenariosWS.ScenariosSoap)(this)).LookupEndorsements(inValue);
            return retVal.Body.LookupEndorsementsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupEndorsementsResponse> KdQuoteLibrary.ScenariosWS.ScenariosSoap.LookupEndorsementsAsync(KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequest request) {
            return base.Channel.LookupEndorsementsAsync(request);
        }
        
        public System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupEndorsementsResponse> LookupEndorsementsAsync(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode) {
            KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequest inValue = new KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequest();
            inValue.Body = new KdQuoteLibrary.ScenariosWS.LookupEndorsementsRequestBody();
            inValue.Body.AccountNo = AccountNo;
            inValue.Body.FormCode = FormCode;
            inValue.Body.EffectiveDate = EffectiveDate;
            inValue.Body.Zipcode = Zipcode;
            return ((KdQuoteLibrary.ScenariosWS.ScenariosSoap)(this)).LookupEndorsementsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityResponse KdQuoteLibrary.ScenariosWS.ScenariosSoap.LookupCoveragesWithCity(KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequest request) {
            return base.Channel.LookupCoveragesWithCity(request);
        }
        
        public string LookupCoveragesWithCity(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode, string City) {
            KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequest inValue = new KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequest();
            inValue.Body = new KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequestBody();
            inValue.Body.AccountNo = AccountNo;
            inValue.Body.FormCode = FormCode;
            inValue.Body.EffectiveDate = EffectiveDate;
            inValue.Body.Zipcode = Zipcode;
            inValue.Body.City = City;
            KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityResponse retVal = ((KdQuoteLibrary.ScenariosWS.ScenariosSoap)(this)).LookupCoveragesWithCity(inValue);
            return retVal.Body.LookupCoveragesWithCityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityResponse> KdQuoteLibrary.ScenariosWS.ScenariosSoap.LookupCoveragesWithCityAsync(KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequest request) {
            return base.Channel.LookupCoveragesWithCityAsync(request);
        }
        
        public System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityResponse> LookupCoveragesWithCityAsync(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode, string City) {
            KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequest inValue = new KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequest();
            inValue.Body = new KdQuoteLibrary.ScenariosWS.LookupCoveragesWithCityRequestBody();
            inValue.Body.AccountNo = AccountNo;
            inValue.Body.FormCode = FormCode;
            inValue.Body.EffectiveDate = EffectiveDate;
            inValue.Body.Zipcode = Zipcode;
            inValue.Body.City = City;
            return ((KdQuoteLibrary.ScenariosWS.ScenariosSoap)(this)).LookupCoveragesWithCityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityResponse KdQuoteLibrary.ScenariosWS.ScenariosSoap.LookupEndorsementsWithCity(KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequest request) {
            return base.Channel.LookupEndorsementsWithCity(request);
        }
        
        public string LookupEndorsementsWithCity(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode, string City) {
            KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequest inValue = new KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequest();
            inValue.Body = new KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequestBody();
            inValue.Body.AccountNo = AccountNo;
            inValue.Body.FormCode = FormCode;
            inValue.Body.EffectiveDate = EffectiveDate;
            inValue.Body.Zipcode = Zipcode;
            inValue.Body.City = City;
            KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityResponse retVal = ((KdQuoteLibrary.ScenariosWS.ScenariosSoap)(this)).LookupEndorsementsWithCity(inValue);
            return retVal.Body.LookupEndorsementsWithCityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityResponse> KdQuoteLibrary.ScenariosWS.ScenariosSoap.LookupEndorsementsWithCityAsync(KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequest request) {
            return base.Channel.LookupEndorsementsWithCityAsync(request);
        }
        
        public System.Threading.Tasks.Task<KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityResponse> LookupEndorsementsWithCityAsync(int AccountNo, int FormCode, System.DateTime EffectiveDate, string Zipcode, string City) {
            KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequest inValue = new KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequest();
            inValue.Body = new KdQuoteLibrary.ScenariosWS.LookupEndorsementsWithCityRequestBody();
            inValue.Body.AccountNo = AccountNo;
            inValue.Body.FormCode = FormCode;
            inValue.Body.EffectiveDate = EffectiveDate;
            inValue.Body.Zipcode = Zipcode;
            inValue.Body.City = City;
            return ((KdQuoteLibrary.ScenariosWS.ScenariosSoap)(this)).LookupEndorsementsWithCityAsync(inValue);
        }
    }
}
